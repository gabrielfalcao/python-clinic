# -*- coding: utf-8 -*-
import os
import sys
from pathlib import Path
import sphinx_rtd_theme

docs_path = Path(__file__).absolute().parent
project_path = docs_path.joinpath('../..')
module_path = project_path.joinpath('python_clinic')

admin_app_path = project_path.joinpath('frontend/admin-app')
react_source_path = admin_app_path.joinpath('src')

os.environ['PYTHON_CLINIC_CONF_PATH'] = str(project_path.joinpath('tests/functional/functional-test-config.yaml'))
sys.path.insert(0, project_path.as_posix())

from python_clinic.version import version  # noqa

project = 'Python Clinic'
copyright = '2018, Gabriel Falcão'
author = 'Gabriel Falcão'

version = version
release = version


extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.doctest',
    'sphinx.ext.intersphinx',
    'sphinx.ext.todo',
    'sphinx.ext.coverage',
    'sphinx.ext.ifconfig',
    'sphinx.ext.viewcode',
    'sphinx.ext.githubpages',
    'sphinxcontrib.httpdomain',
    'sphinxcontrib.mermaid',
    'sphinx-jsonschema',
    # 'sphinx_js',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path .
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "sphinx_rtd_theme"
html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'PythonClinicdoc'


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, 'PythonClinic.tex', 'Python Clinic Documentation',
     'Gabriel Falcão', 'manual'),
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'pythonclinic', 'Python Clinic Documentation',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'PythonClinic', 'Python Clinic Documentation',
     author, 'PythonClinic', 'One line description of project.',
     'Miscellaneous'),
]


# -- Extension configuration -------------------------------------------------

# -- Options for intersphinx extension ---------------------------------------

# Example configuration for intersphinx: refer to the Python standard library.
intersphinx_mapping = {
    'agentzero': ('https://agentzero.readthedocs.io/en/latest/', None),
    'aws': ('https://docs.aws.amazon.com/cli/latest/', None),
    'boto3': ('https://boto3.readthedocs.io/en/latest/', None),
    'botocore': ('https://botocore.readthedocs.io/en/latest/', None),
    'click': ('http://click.pocoo.org/latest/', None),
    'consul': ('https://python-consul.readthedocs.io/en/latest/', None),
    'flask': ('http://flask.pocoo.org/docs/latest/', None),
    'flask_cors': ('https://flask-cors.corydolphin.com/en/latest/', None),
    'flask_restplus': ('https://flask-restplus.readthedocs.io/en/stable/', None),
    'python': ('https://docs.python.org/3', None),
    'werkzeug': ('http://werkzeug.pocoo.org/docs/latest/', None),
    'yaml': ('https://yaml.readthedocs.io/en/latest/', None),
}

# -- Options for todo extension ----------------------------------------------

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True
